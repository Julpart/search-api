image: docker:stable

variables:
  DOCKER_BUILDKIT: 1
  DOCKER_HOST: tcp://docker:2376
  DOCKER_TLS_CERTDIR: "/certs"

services:
  - docker:stable-dind

stages:
  - build
  - deploy

build:
  stage: build
  only:
    - develop
  before_script:
    - docker login -u ${CI_REGISTRY_USER} -p ${CI_REGISTRY_PASSWORD} ${CI_REGISTRY}
    - docker pull ${CI_REGISTRY_IMAGE}/php-fpm-base:latest || true
    - docker pull ${CI_REGISTRY_IMAGE}/nginx-base:latest || true
    - docker pull ${CI_REGISTRY_IMAGE}/cli-base:latest || true
    - docker pull ${CI_REGISTRY_IMAGE}/cli:latest || true
    - docker pull ${CI_REGISTRY_IMAGE}/php-fpm:latest || true
    - docker pull ${CI_REGISTRY_IMAGE}/nginx:latest || true
    - docker build --build-arg BUILDKIT_INLINE_CACHE=1 --cache-from ${CI_REGISTRY_IMAGE}/cli-base:latest --cache-from ${CI_REGISTRY_IMAGE}/php-fpm-base:latest --target cli-base -t ${CI_REGISTRY_IMAGE}/cli-base:latest .
    - docker build --build-arg BUILDKIT_INLINE_CACHE=1 --cache-from ${CI_REGISTRY_IMAGE}/php-fpm-base:latest --target php-fpm-base -t ${CI_REGISTRY_IMAGE}/php-fpm-base:latest .
    - docker build --build-arg BUILDKIT_INLINE_CACHE=1 --cache-from ${CI_REGISTRY_IMAGE}/nginx-base:latest --target nginx-base -t ${CI_REGISTRY_IMAGE}/nginx-base:latest .
    - docker push ${CI_REGISTRY_IMAGE}/nginx-base:latest
    - docker push ${CI_REGISTRY_IMAGE}/php-fpm-base:latest
    - docker push ${CI_REGISTRY_IMAGE}/cli-base:latest
  script:
    - docker build --build-arg BUILDKIT_INLINE_CACHE=1 --cache-from ${CI_REGISTRY_IMAGE}/cli-base:latest --cache-from ${CI_REGISTRY_IMAGE}/php-fpm-base:latest --cache-from ${CI_REGISTRY_IMAGE}/cli:latest --target cli -t ${CI_REGISTRY_IMAGE}/cli:${CI_COMMIT_SHA} -t ${CI_REGISTRY_IMAGE}/cli:latest .
    - docker build --build-arg BUILDKIT_INLINE_CACHE=1 --cache-from ${CI_REGISTRY_IMAGE}/php-fpm-base:latest --cache-from ${CI_REGISTRY_IMAGE}/php-fpm:latest --target php-fpm -t ${CI_REGISTRY_IMAGE}/php-fpm:${CI_COMMIT_SHA} -t ${CI_REGISTRY_IMAGE}/php-fpm:latest .
    - docker build --build-arg BUILDKIT_INLINE_CACHE=1 --cache-from ${CI_REGISTRY_IMAGE}/nginx-base:latest --cache-from ${CI_REGISTRY_IMAGE}/nginx:latest --target nginx -t ${CI_REGISTRY_IMAGE}/nginx:${CI_COMMIT_SHA} -t ${CI_REGISTRY_IMAGE}/nginx:latest .
    - docker push ${CI_REGISTRY_IMAGE}/nginx:${CI_COMMIT_SHA}
    - docker push ${CI_REGISTRY_IMAGE}/nginx:latest
    - docker push ${CI_REGISTRY_IMAGE}/php-fpm:${CI_COMMIT_SHA}
    - docker push ${CI_REGISTRY_IMAGE}/php-fpm:latest
    - docker push ${CI_REGISTRY_IMAGE}/cli:${CI_COMMIT_SHA}
    - docker push ${CI_REGISTRY_IMAGE}/cli:latest

deploy:
  stage: deploy
  only:
    - develop
  before_script:
    - 'command -v ssh-agent >/dev/null || ( apt-get update -y && apt-get install openssh-client -y )'
    - eval $(ssh-agent -s)
    - echo "$SSH_PRIVATE_KEY" | tr -d '\r' | ssh-add -
    - mkdir -p ~/.ssh
    - chmod 700 ~/.ssh
    - ssh-keyscan -p ${DEV_SSH_PORT} ${DEV_SSH_HOST} > ~/.ssh/known_hosts
    - chmod 644 ~/.ssh/known_hosts
  script:
    - ssh -p${DEV_SSH_PORT} ${DEV_SSH_USER}@${DEV_SSH_HOST} "export CODE_VERSION=${CI_COMMIT_SHA} && cd ${DEV_PROVISION_PATH} && docker-compose up -d && docker-compose exec -T -w /var/www/html/docroot cli drush cr && docker-compose exec -T -w /var/www/html/docroot cli drush updb -y && docker-compose exec -T -w /var/www/html/docroot cli drush cim -y && docker-compose exec -T -w /var/www/html/docroot cli drush cr"
